<?php

/**
 * @file
 * Primary module hooks for Advanced permissions request module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function advanced_permissions_request_form_user_form_alter(&$form) {
  // Check if config form has any value.
  $rolesToOffer = \Drupal::config('advanced_permissions_request.settings')->get('roles_to_offer');

  // Check user roles, if is admin, donÂ´t show button.
  $rolesLoguedUser = implode(",", \Drupal::currentUser()->getRoles());
  $userId = \Drupal::currentUser()->id();

  // Check if user has any roleRequeste openned.
  $requestPending = \Drupal::service('advanced_permissions_request.service')->checkUserRolesRequest($userId);

  if ($rolesToOffer != NULL && !str_contains($rolesLoguedUser, 'administrator') && !is_array($requestPending)) {
    $mesage = "<a class='button button--primary' href=/user/" . $userId . "/request-roles>Request new roles</a>";
  }
  elseif (is_array($requestPending)) {
    $mesage = "<a class='button button--primary' href=/advanced-permissions-request/" . $requestPending["nid"] . "/denny>You have pending old request to " . $requestPending["role"] . ", do you want to cancel</a>";
  }

  $form['request_role'] = [
    '#type' => "markup",
    '#markup' => $mesage,
    '#weight' => -100,
  ];

}

/**
 * Implements hook_element_info_alter().
 */
function advanced_permissions_request_element_info_alter(array &$types) {
  // Attach our extra CSS for toolbar icons.
  if (isset($types['toolbar'])) {
    $types['toolbar']['#attached']['library'][] = 'advanced_permissions_request/roles';
  }
}

/**
 * Implements hook_mail().
 */
function advanced_permissions_request_mail($key, &$message, $params) {
  switch ($key) {
    case 'request_role':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_help().
 */
function advanced_permissions_request_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.advanced_permissions_request':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The advanced permissions request offers the possibility for users to claim to site administrators a higher role') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<p>' . t('Once these roles are selected, users will be able to request a higher role from their user profile.') . '</p>';
      $output .= '<p>' . t('Once users have submitted a request for a new role, system administrators will be able to view the list of these requests.') . '</p>';
      $output .= '<p>' . t('At this point, administrators will have the discretion to decide whether or not to grant the role requested by the user.') . '</p>';
      $output .= '<p>' . t('If site admins have declined/accept the users request, they will receive an email notification informing them of this.') . '</p>';
      return $output;
  }
}
